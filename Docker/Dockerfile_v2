ARG cuda_version=10.1
ARG cudnn_version=7
FROM nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel

# Install system packages
RUN apt-get update && apt-get install -y --no-install-recommends \
      bzip2 \
      g++ \
      git \
      wget && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends \
      #graphviz \
      libgl1-mesa-glx \
      libhdf5-dev \
      openmpi-bin && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends \
      #graphviz \
      libsm6 \
      libxext6 \
      libxrender-dev && \
    rm -rf /var/lib/apt/lists/*

# Install conda
ENV CONDA_DIR /opt/conda
ENV PATH $CONDA_DIR/bin:$PATH

RUN wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh && \
    echo "c59b3dd3cad550ac7596e0d599b91e75d88826db132e4146030ef471bb434e9a *Miniconda3-4.2.12-Linux-x86_64.sh" | sha256sum -c - && \
    /bin/bash /Miniconda3-4.2.12-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-4.2.12-Linux-x86_64.sh && \
    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh

# Install Python packages and keras
ENV NB_USER keras
ENV NB_UID 1000

RUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \
    chown $NB_USER $CONDA_DIR -R && \
    mkdir -p /src && \
    chown $NB_USER /src

USER $NB_USER

ARG python_version=3.6

RUN conda config --append channels conda-forge
RUN conda install -y python=${python_version} && \
    pip install --upgrade pip && \
    pip install \
      opencv-python==4.1.1.26 && \
      #keras_resnet \
      #setuptools==41.0.0 \
      #sklearn_pandas \
      #tensorflow-gpu==1.15.0 \
      #tensorflow-addons \
      #tensorflow-probability \
      #absl-py==0.7.1 && \
      #cntk-gpu && \
    conda install \
      absl-py \
      tensorflow-gpu \
      #bcolz \
      #h5py \
      matplotlib \
      #mkl \
      #nose \
      #notebook \
      Pillow \
      #pandas \
      #pydot \
      #pygpu \
      pyyaml \
      #scikit-learn \
      six \
      #theano \
      #mkdocs \
      #progressbar2 \
      cython \
      #pycocotools \
      && \
    pip install \
      tensorflow-addons \
      tensorflow-probability && \


    #git clone git://github.com/keras-team/keras.git /src && pip install -e /src[tests] && \
    pip install git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI && \
    conda clean -yt

RUN conda install lxml=4.5.0
RUN conda clean -yt

ADD theanorc /home/keras/.theanorc

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

ENV PYTHONPATH='/src/:$PYTHONPATH'

# For CUDA profiling, TensorFlow requires CUPTI.
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH

# Link the libcuda stub to the location where tensorflow is searching for it and reconfigure
# dynamic linker run-time bindings
USER root
RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \
    && echo "/usr/local/cuda/lib64/stubs" > /etc/ld.so.conf.d/z-cuda-stubs.conf \
    && ldconfig

WORKDIR /src
USER $NB_USER

#EXPOSE 8888

#CMD jupyter notebook --port=8888 --ip=0.0.0.0